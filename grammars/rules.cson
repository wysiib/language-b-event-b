'fileTypes': [
  'mch'
  'rmch'
]
'name': 'B Rules'
'scopeName': 'source.classicalb.rules'
'patterns': [
  { 'include': '#rules_machine' }
  { 'include': '#control_blocks' }
  {
    'match': '''(?x)
      \\b(REFERENCES)\\b
    '''
    'name': 'storage.type.clause.classicalb'
  }
  {
    'match': '\\b(STRING_FORMAT)\\b'
    'name': 'keyword.operator.definitions.rules.classicalb'
  }
  {
    'match': '''(?x)
      \\b(STRING_FORMAT|TO_STRING|CHOOSE|CONCAT_STRINGS)\\b
    '''
    'name': 'constants'
  }
  {
    'match': '''(?x)
      \\b(RULE_SUCCESS|COUNTEREXAMPLE|EXPECT|TYPE|VALUE|DUMMY_VALUE|ERROR_TYPE
        |SUCCEEDED_RULE|SUCCEEDED_RULE_ERROR_TYPE|FAILED_RULE|FAILED_RULE_ERROR_TYPE
        |FAILED_RULE_ALL_ERROR_TYPES|NOT_CHECKED_RULE|DISABLED_RULE|GET_RULE_COUNTEREXAMPLES
        )\\b
    '''
    'name': 'keyword.control.rules.classicalb'
  }
  {
    'match': '''(?x)
      \\b(ERROR_TYPES|RULEID|POSTCONDITION
      |DEPENDS_ON_RULE|DEPENDS_ON_COMPUTATION|ACTIVATION|PRECONDITION|TAGS
      |BODY|REPLACES)\\b
    '''
    'name': 'entity'
  }
  { 'include' : "source.classicalb" }
]
'repository':
  'rules_machine':
    'patterns':[
      {
        'begin': '\\b(RULES_MACHINE)\\b'
        'beginCaptures':
          '1':
            'name': 'storage.type.machine.rules.start.classicalb'
        'end': '\\bEND\\b'
        'endCaptures':
          '0':
            'name': 'storage.type.machine.rules.end.classicalb'
        'name': 'meta.machine.classicalb'
        'patterns': [
          { 'include' : "$self" }
        ]
      }
    ]
  'control_blocks':
    'patterns': [
        {
          'begin': '''(?x)
              \\b(FUNCTION|RULE|COMPUTATION)\\b
            '''
          'beginCaptures':
            '0':
              'name': 'entity'
          'end': '\\bEND\\b'
          'endCaptures':
            '0':
              'name': 'entity'
          'patterns': [
            { 'include' : "$self" }
          ]
        }
        {
          'begin': '''(?x)
              \\b(FOR|RULE_FORALL|RULE_FAIL|DEFINE)\\b
            '''
          'beginCaptures':
            '0':
              'name': 'keyword.control.classicalb'
          'end': '\\bEND\\b'
          'endCaptures':
            '0':
              'name': 'keyword.control.classicalb'
          'patterns': [
            {
              'match': '\\b(INVARIANT)\\b'
              'name': 'keyword.control.classicalb'
            }
            { 'include' : "$self" }
          ]
        }
    ]
